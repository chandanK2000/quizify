{
  "html": {
    "set1": [
      {
        "question": "What does HTML stand for?",
        "options": [
          "Hyper Text Markup Language",
          "Hyperlinks and Text Markup Language",
          "Home Tool Markup Language",
          "Home Tool Markup Language"
        ],
        "answer": "Hyper Text Markup Language"
      },
      {
        "question": "What is the correct HTML element for inserting a line break?",
        "options": ["<break>", "<lb>", "<br>"],
        "answer": "<br>"
      },
      {
        "question": "Which HTML attribute is used to define inline styles?",
        "options": ["class", "style", "font"],
        "answer": "style"
      }
    ],
    "set2": [
      {
        "question": "What is the correct HTML for creating a hyperlink?",
        "options": [
          "<a href='http://www.example.com'>Example</a>",
          "<a name='http://www.example.com'>Example</a>",
          "<hyperlink>http://www.example.com</hyperlink>"
        ],
        "answer": "<a href='http://www.example.com'>Example</a>"
      },
      {
        "question": "What does the <img> tag define in HTML?",
        "options": ["A hyperlink", "An image", "An abbreviation"],
        "answer": "An image"
      },
      {
        "question": "What is the correct HTML for creating a checkbox?",
        "options": ["<input type='checkbox'>", "<check>", "<input type='check'>"],
        "answer": "<input type='checkbox'>"
      }
    ],
    "set3": [
      {
        "question": "What is the correct HTML for inserting a background image?",
        "options": [
          "<body background='background.jpg'>",
          "<body style='background-image: url(background.jpg)'>",
          "<background src='background.jpg'>"
        ],
        "answer": "<body style='background-image: url(background.jpg)'>"
      },
      {
        "question": "Which HTML tag is used to define an internal style sheet?",
        "options": ["<style>", "<css>", "<script>"],
        "answer": "<style>"
      },
      {
        "question": "How can you make a numbered list in HTML?",
        "options": ["<ul>", "<ol>", "<list>"],
        "answer": "<ol>"
      }
    ]
  },
  "css": {
    "set1": [
      {
        "question": "What does CSS stand for?",
        "options": [
          "Cascading Style Sheets",
          "Computer Style Sheets",
          "Creative Style Sheets"
        ],
        "answer": "Cascading Style Sheets"
      },
      {
        "question": "Which CSS property is used to change the text color of an element?",
        "options": ["text-color", "color", "font-color"],
        "answer": "color"
      },
      {
        "question": "Which CSS property is used to change the left margin of an element?",
        "options": ["padding-left", "margin-left", "left-margin"],
        "answer": "margin-left"
      }
    ],
    "set2": [
      {
        "question": "How do you select an element with id 'demo' in CSS?",
        "options": ["#demo", ".demo", "demo"],
        "answer": "#demo"
      },
      {
        "question": "What is the correct CSS syntax for making all the <p> elements bold?",
        "options": ["p {font-weight: bold;}", "<p style='font-weight: bold;'>", "p {text-style: bold;}"],
        "answer": "p {font-weight: bold;}"
      },
      {
        "question": "How do you add a background color for all <h1> elements?",
        "options": ["h1 {background-color: yellow;}", "h1 {color: yellow;}", "h1 {bg-color: yellow;}"],
        "answer": "h1 {background-color: yellow;}"
      }
    ],
    "set3": [
      {
        "question": "How do you make a list that lists its items with squares in CSS?",
        "options": ["list-type: square;", "list-style-type: square;", "type: square;"],
        "answer": "list-style-type: square;"
      },
      {
        "question": "How do you make the text bold using CSS?",
        "options": ["font: bold;", "text-weight: bold;", "font-weight: bold;"],
        "answer": "font-weight: bold;"
      },
      {
        "question": "How do you make each word in a text start with a capital letter?",
        "options": ["text-transform: capitalize;", "text-style: capitalize;", "text-effect: capitalize;"],
        "answer": "text-transform: capitalize;"
      }
    ]
  },
  "javascript": {
    "set1": [
      {
        "question": "What is JavaScript?",
        "options": [
          "A programming language",
          "A type of coffee",
          "A markup language"
        ],
        "answer": "A programming language"
      },
      {
        "question": "Inside which HTML element do we put the JavaScript?",
        "options": ["<javascript>", "<script>", "<js>"],
        "answer": "<script>"
      },
      {
        "question": "How do you declare a JavaScript variable?",
        "options": ["v carName;", "variable carName;", "var carName;"],
        "answer": "var carName;"
      }
    ],
    "set2": [
      {
        "question": "What is the correct JavaScript syntax for opening a new window called 'newWin'?",
        "options": ["newWin('url')", "window.open('url')", "open('url')"],
        "answer": "window.open('url')"
      },
      {
        "question": "Which event occurs when the user clicks on an HTML element?",
        "options": ["onmouseover", "onchange", "onclick"],
        "answer": "onclick"
      },
      {
        "question": "How do you write 'Hello World' in an alert box?",
        "options": ["msgBox('Hello World');", "alertBox('Hello World');", "alert('Hello World');"],
        "answer": "alert('Hello World');"
      }
    ],
    "set3": [
      {
        "question": "How do you write an IF statement in JavaScript?",
        "options": ["if i = 5 then", "if (i == 5)", "if i == 5 then"],
        "answer": "if (i == 5)"
      },
      {
        "question": "How do you create a function in JavaScript?",
        "options": ["function: myFunction()", "function myFunction()", "function = myFunction()"],
        "answer": "function myFunction()"
      }
    ]
  },
  "reactjs": {
  "set1": [
    {
      "question": "What is ReactJS?",
      "options": [
        "A JavaScript framework",
        "A Python library",
        "A CSS preprocessor"
      ],
      "answer": "A JavaScript framework"
    },
    {
      "question": "What is the main advantage of using ReactJS?",
      "options": [
        "Easier debugging",
        "Faster rendering",
        "Built-in testing tools"
      ],
      "answer": "Faster rendering"
    },
    {
      "question": "Which virtual DOM concept does ReactJS utilize for efficient updates?",
      "options": [
        "Shadow DOM",
        "Light DOM",
        "Fiber"
      ],
      "answer": "Fiber"
    }
  ],
  "set2": [
    {
      "question": "How do you render a React component within another component?",
      "options": [
        "Using ReactDOM.render()",
        "Using document.createElement()",
        "Using <Component /> syntax"
      ],
      "answer": "Using <Component /> syntax"
    },
    {
      "question": "Which method is used to update the state in React component?",
      "options": [
        "setState()",
        "updateState()",
        "modifyState()"
      ],
      "answer": "setState()"
    },
    {
      "question": "What is the purpose of 'props' in React?",
      "options": [
        "To enable two-way binding",
        "To pass data from parent to child components",
        "To define component styles"
      ],
      "answer": "To pass data from parent to child components"
    }
  ],
  "set3": [
    {
      "question": "What is the key benefit of using React hooks?",
      "options": [
        "Easier component reuse",
        "Class component optimization",
        "Simpler state management"
      ],
      "answer": "Simpler state management"
    },
    {
      "question": "Which lifecycle method is invoked immediately after a component is mounted?",
      "options": [
        "componentDidMount()",
        "componentWillUnmount()",
        "componentDidUpdate()"
      ],
      "answer": "componentDidMount()"
    },
    {
      "question": "What is the purpose of the 'useState' hook in React?",
      "options": [
        "To initialize component state",
        "To fetch data from an API",
        "To define component props"
      ],
      "answer": "To initialize component state"
    }
  ]
}

}
     